(function(b,d){b.fn.combogrid.extensions={};var a=b.fn.combogrid.extensions.methods={};var c=b.fn.combogrid.extensions.defaults=b.extend({},b.fn.datagrid.extensions.defaults,{onLoadSuccess:function(){b.fn.datagrid.extensions.defaults.onLoadSuccess.apply(b(this).combogrid("grid")[0],arguments)},onResizeColumn:function(){var f=b(this),e=f.combogrid("grid");b.fn.datagrid.extensions.defaults.onResizeColumn.apply(b(this).combogrid("grid")[0],arguments)},onBeforeEdit:function(){b.fn.datagrid.extensions.defaults.onBeforeEdit.apply(b(this).combogrid("grid")[0],arguments)},onAfterEdit:function(){b.fn.datagrid.extensions.defaults.onAfterEdit.apply(b(this).combogrid("grid")[0],arguments)},onCancelEdit:function(){b.fn.datagrid.extensions.defaults.onCancelEdit.apply(b(this).combogrid("grid")[0],arguments)},onBeforeDeleteColumn:function(){b.fn.datagrid.extensions.defaults.onBeforeDeleteColumn.apply(b(this).combogrid("grid")[0],arguments)},onDeleteColumn:function(){b.fn.datagrid.extensions.defaults.onDeleteColumn.apply(b(this).combogrid("grid")[0],arguments)},onBeforeMoveColumn:function(){b.fn.datagrid.extensions.defaults.onBeforeMoveColumn.apply(b(this).combogrid("grid")[0],arguments)},onMoveColumn:function(){b.fn.datagrid.extensions.defaults.onMoveColumn.apply(b(this).combogrid("grid")[0],arguments)},onBeforeDrop:function(){b.fn.datagrid.extensions.defaults.onBeforeDrop.apply(b(this).combogrid("grid")[0],arguments)},onDrop:function(){b.fn.datagrid.extensions.defaults.onDrop.apply(b(this).combogrid("grid")[0],arguments)},onBeforeDrag:function(){b.fn.datagrid.extensions.defaults.onBeforeDrag.apply(b(this).combogrid("grid")[0],arguments)},onStartDrag:function(){b.fn.datagrid.extensions.defaults.onStartDrag.apply(b(this).combogrid("grid")[0],arguments)},onStopDrag:function(){b.fn.datagrid.extensions.defaults.onStopDrag.apply(b(this).combogrid("grid")[0],arguments)},onDragEnter:function(){b.fn.datagrid.extensions.defaults.onDragEnter.apply(b(this).combogrid("grid")[0],arguments)},onDragOver:function(){b.fn.datagrid.extensions.defaults.onDragOver.apply(b(this).combogrid("grid")[0],arguments)},onDragLeave:function(){b.fn.datagrid.extensions.defaults.onDragLeave.apply(b(this).combogrid("grid")[0],arguments)},onBeforeUpdateRow:function(){b.fn.datagrid.extensions.defaults.onBeforeUpdateRow.apply(b(this).combogrid("grid")[0],arguments)},onUpdateRow:function(){b.fn.datagrid.extensions.defaults.onUpdateRow.apply(b(this).combogrid("grid")[0],arguments)},onBeforeAppendRow:function(){b.fn.datagrid.extensions.defaults.onBeforeAppendRow.apply(b(this).combogrid("grid")[0],arguments)},onAppendRow:function(){b.fn.datagrid.extensions.defaults.onAppendRow.apply(b(this).combogrid("grid")[0],arguments)},onBeforeInsertRow:function(){b.fn.datagrid.extensions.defaults.onBeforeInsertRow.apply(b(this).combogrid("grid")[0],arguments)},onBeforeRow:function(){b.fn.datagrid.extensions.defaults.onBeforeRow.apply(b(this).combogrid("grid")[0],arguments)}});b.extend(b.fn.combogrid.defaults,c);b.extend(b.fn.combogrid.methods,a)})(jQuery);